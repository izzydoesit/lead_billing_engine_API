"""Initial migration

Revision ID: cfbd30e0b841
Revises: 
Create Date: 2025-03-21 21:04:22.567610

"""

from alembic import op
import sqlalchemy as sa


import logging
from sqlalchemy import text

logger = logging.getLogger(__name__)

revision = 'cfbd30e0b841'
down_revision = None
branch_labels = None
depends_on = None

def check_version(connection):
    # Example check, customize as needed
    result = connection.execute(text("SELECT version_num FROM alembic_version")).fetchone()
    if result:
        current_version = result[0]
        logger.info(f"Current DB version: {current_version}")
        if current_version != "None":
            raise Exception(f"Expected version None but found {current_version}")
    else:
        logger.info("No version found in alembic_version table.")

def upgrade():
    connection = op.get_bind()
    logger.info("Applying upgrade to cfbd30e0b841")
    try:
        check_version(connection)
            # ### commands auto generated by Alembic - please adjust! ###
        op.create_table('customers',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=True)
        op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
        op.create_index(op.f('ix_customers_name'), 'customers', ['name'], unique=False)
        op.create_table('products',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
        op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
        op.create_table('billing_reports',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('customer_id', sa.String(length=36), nullable=False),
        sa.Column('total_billed_amount', sa.Numeric(), nullable=False),
        sa.Column('savings_amount', sa.Numeric(), nullable=True),
        sa.Column('file_path', sa.String(length=255), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_billing_reports_created_at'), 'billing_reports', ['created_at'], unique=False)
        op.create_index(op.f('ix_billing_reports_customer_id'), 'billing_reports', ['customer_id'], unique=False)
        op.create_index(op.f('ix_billing_reports_id'), 'billing_reports', ['id'], unique=False)
        op.create_table('leads',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('customer_id', sa.String(length=36), nullable=False),
        sa.Column('product_id', sa.String(length=36), nullable=False),
        sa.Column('lead_type', sa.Enum('WEBSITE_VISIT', 'SOCIAL_MEDIA', 'EMAIL_CAMPAIGN', 'REFERRAL', 'EVENT', 'WEBINAR', 'DEMO_REQUEST', 'TRADE_SHOW', 'CONFERENCE', 'NEWSLETTER', 'FEEDBACK', name='leadtypes'), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_leads_customer_id'), 'leads', ['customer_id'], unique=False)
        op.create_index(op.f('ix_leads_id'), 'leads', ['id'], unique=False)
        op.create_index(op.f('ix_leads_product_id'), 'leads', ['product_id'], unique=False)
        op.create_table('actions',
        sa.Column('id', sa.String(length=36), nullable=False),
        sa.Column('lead_id', sa.String(length=36), nullable=False),
        sa.Column('customer_id', sa.String(length=36), nullable=False),
        sa.Column('product_id', sa.String(length=36), nullable=False),
        sa.Column('billing_report_id', sa.String(length=36), nullable=True),
        sa.Column('lead_type', sa.Enum('WEBSITE_VISIT', 'SOCIAL_MEDIA', 'EMAIL_CAMPAIGN', 'REFERRAL', 'EVENT', 'WEBINAR', 'DEMO_REQUEST', 'TRADE_SHOW', 'CONFERENCE', 'NEWSLETTER', 'FEEDBACK', name='leadtypes'), nullable=False),
        sa.Column('action_type', sa.Enum('VISIT', 'DOWNLOAD', 'FORM_SUBMIT', 'PURCHASE', 'LIKE', 'FOLLOW', 'SHARE', 'COMMENT', 'REPOST', 'OPEN', 'CLICK', 'UNSUBSCRIBE', 'SIGNUP', 'REGISTER', 'ATTEND', 'FOLLOW_UP', 'ATTENDANCE', 'SUBMISSION', name='actiontypes'), nullable=False),
        sa.Column('engagement_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='engagementleveltypes'), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('cost_amount', sa.Numeric(), nullable=True),
        sa.Column('is_duplicate', sa.Boolean(), nullable=True),
        sa.Column('status', sa.Enum('BILLED', 'NOT_BILLED', name='billablestatus'), nullable=True),
        sa.ForeignKeyConstraint(['billing_report_id'], ['billing_reports.id'], ),
        sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
        sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], ),
        sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
        op.create_index(op.f('ix_actions_billing_report_id'), 'actions', ['billing_report_id'], unique=False)
        op.create_index(op.f('ix_actions_customer_id'), 'actions', ['customer_id'], unique=False)
        op.create_index(op.f('ix_actions_id'), 'actions', ['id'], unique=False)
        op.create_index(op.f('ix_actions_lead_id'), 'actions', ['lead_id'], unique=False)
        op.create_index(op.f('ix_actions_product_id'), 'actions', ['product_id'], unique=False)
        # ### end Alembic commands ###
        logger.info("Successfully applied upgrade to cfbd30e0b841")
    except Exception as e:
        logger.error(f"Failed to apply upgrade to cfbd30e0b841: {e}")
        raise e

def downgrade():
    connection = op.get_bind()
    logger.info("Reverting upgrade to cfbd30e0b841")
    try:
            # ### commands auto generated by Alembic - please adjust! ###
        op.drop_index(op.f('ix_actions_product_id'), table_name='actions')
        op.drop_index(op.f('ix_actions_lead_id'), table_name='actions')
        op.drop_index(op.f('ix_actions_id'), table_name='actions')
        op.drop_index(op.f('ix_actions_customer_id'), table_name='actions')
        op.drop_index(op.f('ix_actions_billing_report_id'), table_name='actions')
        op.drop_table('actions')
        op.drop_index(op.f('ix_leads_product_id'), table_name='leads')
        op.drop_index(op.f('ix_leads_id'), table_name='leads')
        op.drop_index(op.f('ix_leads_customer_id'), table_name='leads')
        op.drop_table('leads')
        op.drop_index(op.f('ix_billing_reports_id'), table_name='billing_reports')
        op.drop_index(op.f('ix_billing_reports_customer_id'), table_name='billing_reports')
        op.drop_index(op.f('ix_billing_reports_created_at'), table_name='billing_reports')
        op.drop_table('billing_reports')
        op.drop_index(op.f('ix_products_name'), table_name='products')
        op.drop_index(op.f('ix_products_id'), table_name='products')
        op.drop_table('products')
        op.drop_index(op.f('ix_customers_name'), table_name='customers')
        op.drop_index(op.f('ix_customers_id'), table_name='customers')
        op.drop_index(op.f('ix_customers_email'), table_name='customers')
        op.drop_table('customers')
        # ### end Alembic commands ###
        logger.info("Successfully reverted upgrade to cfbd30e0b841")
    except Exception as e:
        logger.error(f"Failed to revert upgrade to cfbd30e0b841: {e}")
        raise e
