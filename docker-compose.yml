services:
  # LocalStack for simulating AWS services locally
  localstack:
    image: localstack/localstack:latest
    container_name: localstack-admin
    ports:
      - "4566:4566"
    environment:
      - SERVICES=apigateway,cloudformation,iam,dynamodb,rds,ecs,ec2,lambda,cloudwatch,secretsmanager
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./localstack-data:/tmp/localstack/data
    networks:
      - backend-network

  # PostgreSQL database for local development
  postgres:
    image: postgres:14
    container_name: postgres-admin
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=dbadmin
      - POSTGRES_PASSWORD=dbpassword
      - POSTGRES_DB=backend_app
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbadmin -d backend_app"]
      interval: 5s
      timeout: 5s
      retries: 5

  # API service using FastAPI
  api:
    build:
      context: ./backend # Relative path to the directory containing the Dockerfile
      dockerfile: Dockerfile # Name of the Dockerfile
    container_name: api-admin
    volumes:
      - ./backend/app:/app # Adjust the path to match your directory structure
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=backend_app
      - DB_USER=dbadmin
      - DB_PASSWORD=dbpassword
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - ENVIRONMENT=local
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network
    command:
      [
        "poetry",
        "run",
        "uvicorn",
        "app.main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000",
        "--reload",
      ]

  # Terraform service for running infrastructure
  terraform:
    image: hashicorp/terraform:latest
    container_name: terra-admin
    volumes:
      - ./terraform:/terraform
      - ./.aws:/root/.aws
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - TF_VAR_aws_region=us-east-1
      - TF_VAR_db_username=dbadmin
      - TF_VAR_db_password=dbpassword
      - TF_VAR_project_name=backend-app
    working_dir: /terraform
    depends_on:
      - localstack
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  postgres-data:
  localstack-data:
